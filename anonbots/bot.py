import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

# === –ù–ê–°–¢–†–û–ô–ö–ê ===
TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–ë–û–¢–ê"   # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç BotFather
ADMIN_CHAT_ID = 123456789    # –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π chat_id (–ù–ï username!)
# =================

bot = Bot(
    token=TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π: –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Üí id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_map = {}


@dp.message()
async def handle_message(message: types.Message):
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∞–¥–º–∏–Ω–æ–º"""
    try:
        # –ï—Å–ª–∏ –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –∞–¥–º–∏–Ω—É
        if message.chat.id != ADMIN_CHAT_ID:
            fwd = await message.forward(ADMIN_CHAT_ID)
            user_map[fwd.message_id] = message.chat.id

        # –ï—Å–ª–∏ –ø–∏—à–µ—Ç –∞–¥–º–∏–Ω ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–≤–µ—Ç–∏–ª –ª–∏ –æ–Ω –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        else:
            if not message.reply_to_message:
                await bot.send_message(
                    ADMIN_CHAT_ID,
                    "‚ö†Ô∏è –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —Å–¥–µ–ª–∞–π <b>–æ—Ç–≤–µ—Ç (Reply)</b> –Ω–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
                )
                return

            # –ù–∞—Ö–æ–¥–∏–º, –∫–æ–º—É –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –æ—Ç–≤–µ—Ç
            user_id = user_map.get(message.reply_to_message.message_id)
            if not user_id:
                await bot.send_message(
                    ADMIN_CHAT_ID,
                    "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫–æ–º—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ—Ç —Å–≤—è–∑–∏ —Å –∏—Å—Ö–æ–¥–Ω—ã–º)."
                )
                return

            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–ª—é–±–æ–≥–æ —Ç–∏–ø–∞)
            if message.text:
                await bot.send_message(user_id, message.text)
            elif message.photo:
                await bot.send_photo(user_id, message.photo[-1].file_id, caption=message.caption or "")
            elif message.video:
                await bot.send_video(user_id, message.video.file_id, caption=message.caption or "")
            elif message.voice:
                await bot.send_voice(user_id, message.voice.file_id, caption=message.caption or "")
            elif message.document:
                await bot.send_document(user_id, message.document.file_id, caption=message.caption or "")
            elif message.sticker:
                await bot.send_sticker(user_id, message.sticker.file_id)
            else:
                await bot.send_message(user_id, "‚ö†Ô∏è –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")


async def main():
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())


